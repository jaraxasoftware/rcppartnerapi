openapi: 3.0.1
info:
  title: RCP Partner API
  description: RCP Partner API allows managing data belonging to a single partner
    through a simple API that have access to any data related to that partner.
  contact:
    email: info@remotecarepartners.com
  version: 0.1.0
servers:
- url: https://cloud.hub.remotecarepartners.com/{environment}/netcomp_rcp/rpc/partners/api/v1
  variables:
    environment:
      default: prod
      enum:
      - dev
      - qa
      - prod
tags:
- name: organization
  description: Organizations
  externalDocs:
    description: GitHub
    url: https://github.com/netscale-technologies/netcomp_rcp_doc/blob/prod/doc/organizations.md
- name: office
  description: Office (aka Branch)
  externalDocs:
    description: GitHub
    url: https://github.com/netscale-technologies/netcomp_rcp_doc/blob/prod/doc/offices.md
- name: patient
  description: Patient
  externalDocs:
    description: GitHub
    url: https://github.com/netscale-technologies/netcomp_rcp_doc/blob/prod/doc/patients.md
- name: order
  description: Order
  externalDocs:
    description: GitHub
    url: https://github.com/netscale-technologies/netcomp_rcp_doc/blob/prod/doc/orders.md
paths:
  /organization:
    get:
      tags:
      - organization
      summary: Finds organizations
      description: Find organizations according to optional filter parameters
      operationId: getOrganizations
      parameters:
      - name: name
        in: query
        description: Name prefix to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Mar
      - name: phone
        in: query
        description: Phone prefix to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 1555
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - read:organization
    post:
      tags:
      - organization
      summary: Add a new organization to the given partner
      operationId: addOrganization
      requestBody:
        description: Organization object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationExceptUid'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:organization
        - read:organization
      x-codegen-request-body-name: body
  /organization/{organizationUid}:
    get:
      tags:
      - organization
      summary: Find organization by UID
      description: Returns a single organization
      operationId: getOrganization
      parameters:
      - name: organizationUid
        in: path
        description: UID of organization to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: organizations-016e1c60ef5bMfvQH1qKroKZUfJ
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - read:organization
    put:
      tags:
      - organization
      summary: Update an existing organization
      operationId: updateOrganization
      parameters:
      - name: organizationUid
        in: path
        description: UID of organization to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: organizations-016e1c60ef5bMfvQH1qKroKZUfJ
      requestBody:
        description: Organization object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:organization
        - read:organization
      x-codegen-request-body-name: body
    delete:
      tags:
      - organization
      summary: Deletes an organization
      operationId: deleteOrganization
      parameters:
      - name: organizationUid
        in: path
        description: Organization UID to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: organizations-016e1c60ef5bMfvQH1qKroKZUfJ
      responses:
        "200":
          description: Successful operation
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:organization
        - read:organization
  /office:
    get:
      tags:
      - office
      summary: Finds offices
      description: Find offices according to optional filter parameters
      operationId: getOffices
      parameters:
      - name: name
        in: query
        description: Name prefix to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Medi
      - name: phone
        in: query
        description: Phone prefix to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 15552
      - name: organization_uid
        in: query
        description: organization_uid to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: organizations-016e1c60ef5bMfvQH1qKroKZUfJ
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Office'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - read:office
    post:
      tags:
      - office
      summary: Add a new office to the given partner
      operationId: addOffice
      requestBody:
        description: Office object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeExceptUid'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:office
        - read:office
      x-codegen-request-body-name: body
  /office/{officeUid}:
    get:
      tags:
      - office
      summary: Find office by UID
      description: Returns a single office
      operationId: getOffice
      parameters:
      - name: officeUid
        in: path
        description: UID of office to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: offices-016e21775c54NBNbemXCCVHaqiP
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Office not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - read:office
    put:
      tags:
      - office
      summary: Update an existing office
      operationId: updateOffice
      parameters:
      - name: officeUid
        in: path
        description: UID of office to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: offices-016e21775c54NBNbemXCCVHaqiP
      requestBody:
        description: Office object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Office not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:office
        - read:office
      x-codegen-request-body-name: body
    delete:
      tags:
      - office
      summary: Deletes an office
      operationId: deleteOffice
      parameters:
      - name: officeUid
        in: path
        description: Office UID to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: offices-016e21775c54NBNbemXCCVHaqiP
      responses:
        "200":
          description: Successful operation
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Office not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:office
        - read:office
  /patient:
    get:
      tags:
      - patient
      summary: Finds patients
      description: Find patients according to optional filter parameters
      operationId: getPatients
      parameters:
      - name: name
        in: query
        description: Name prefix to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Char
      - name: phone
        in: query
        description: Phone prefix to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 15552
      - name: office_uid
        in: query
        description: office_uid to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: offices-016e21775c54NBNbemXCCVHaqiP
      - name: organization_uid
        in: query
        description: organization_uid to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: organizations-016e1c60ef5bMfvQH1qKroKZUfJ
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - read:patient
    post:
      tags:
      - patient
      summary: Add a new patient to the given partner
      operationId: addPatient
      requestBody:
        description: Patient object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientExceptUid'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:patient
        - read:patient
      x-codegen-request-body-name: body
  /patient/{patientUid}:
    get:
      tags:
      - patient
      summary: Find patient by UID
      description: Returns a single patient
      operationId: getPatient
      parameters:
      - name: patientUid
        in: path
        description: UID of patient to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: patients-0K58FX811PqZ6fFrOakaxgJZScu
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Patient not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - read:patient
    put:
      tags:
      - patient
      summary: Update an existing patient
      operationId: updatePatient
      parameters:
      - name: patientUid
        in: path
        description: UID of patient to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: patients-0K58FX811PqZ6fFrOakaxgJZScu
      requestBody:
        description: Patient object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Patient not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:patient
        - read:patient
      x-codegen-request-body-name: body
    delete:
      tags:
      - patient
      summary: Deletes an patient
      operationId: deletePatient
      parameters:
      - name: patientUid
        in: path
        description: Patient UID to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: patients-0K58FX811PqZ6fFrOakaxgJZScu
      responses:
        "200":
          description: Successful operation
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Patient not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:patient
        - read:patient
  /order:
    get:
      tags:
      - order
      summary: Finds orders
      description: Find orders according to optional filter parameters
      operationId: getOrders
      parameters:
      - name: status
        in: query
        description: Order status to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: created
      - name: patient_uid
        in: query
        description: patient_uid to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: patients-0K58FX811PqZ6fFrOakaxgJZScu
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - read:order
    post:
      tags:
      - order
      summary: Add a new order to the given partner
      operationId: addOrder
      requestBody:
        description: Order object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderExceptUid'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - write:order
        - read:order
      x-codegen-request-body-name: body
  /order/{orderUid}:
    get:
      tags:
      - order
      summary: Find order by UID
      description: Returns a single order
      operationId: getOrder
      parameters:
      - name: orderUid
        in: path
        description: UID of order to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: orders-0K7F30L5AYS6UoiJWDPnLULEKvu
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Order not found
          content: {}
        "406":
          description: Accepted media type not supported
          content: {}
        "415":
          description: Unsupported media type
          content: {}
      security:
      - partner_auth:
        - read:order
components:
  schemas:
    Organization:
      allOf:
      - required:
        - uid
        type: object
        properties:
          uid:
            type: string
            description: UID of organization.
            example: organizations-016e1c60ef5bMfvQH1qKroKZUfJ
      - $ref: '#/components/schemas/OrganizationExceptUid'
    OrganizationExceptUid:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: User friendly description.
          example: Medical Care Ltd.
        phone:
          type: string
          description: Phone (with leading 1)
          example: "15552106912"
        address:
          $ref: '#/components/schemas/Address'
        timezone:
          type: string
          description: Timezone (Currently not existing at organization level)
          example: US/Eastern
    Office:
      allOf:
      - required:
        - uid
        type: object
        properties:
          uid:
            type: string
            description: UID of office.
            example: offices-016e21775c54NBNbemXCCVHaqiP
      - $ref: '#/components/schemas/OfficeExceptUid'
    OfficeExceptUid:
      required:
      - name
      - organization_uid
      type: object
      properties:
        organization_uid:
          type: string
          description: UID of valid organization.
          example: organizations-016e1c60ef5bMfvQH1qKroKZUfJ
        name:
          type: string
          description: User friendly description.
          example: Dr. Smith Office
        phone:
          type: string
          description: Phone
          example: "15552106911"
        address:
          $ref: '#/components/schemas/Address'
        timezone:
          type: string
          description: Timezone
          example: US/Eastern
    Patient:
      allOf:
      - required:
        - uid
        type: object
        properties:
          uid:
            type: string
            description: UID of patient.
            example: patients-0K58FX811PqZ6fFrOakaxgJZScu
      - $ref: '#/components/schemas/PatientExceptUid'
    PatientExceptUid:
      required:
      - mrn
      - name
      - office_uid
      type: object
      properties:
        office_uid:
          type: string
          description: UID of valid office.
          example: offices-016e21775c54NBNbemXCCVHaqiP
        mrn:
          type: string
          description: Medical Record Number.
          example: "1234567"
        name:
          type: string
          description: Patient name.
          example: John
        surname:
          type: string
          description: Patient surname.
          example: Smith
        email:
          type: string
          description: Patient email.
          example: john.smith@example.com
        phone:
          type: string
          description: Patient phone
          example: "15552106914"
        address:
          description: Patient address
          allOf:
          - $ref: '#/components/schemas/Address'
        birth_time:
          type: string
          description: Patient birthdate (Required for Bodyfat scale)
          example: 1990-10-04T00:00:00Z
          externalDocs:
            description: RFC3339
            url: https://tools.ietf.org/html/rfc3339
        height:
          type: integer
          description: Patient height in cm (Required for Bodyfat scale)
          example: 174
    Order:
      allOf:
      - required:
        - uid
        type: object
        properties:
          uid:
            type: string
            description: UID of order.
            example: orders-0K7F30L5AYS6UoiJWDPnLULEKvu
      - $ref: '#/components/schemas/OrderExceptUid'
    OrderExceptUid:
      required:
      - device_types
      - patient_uid
      type: object
      properties:
        patient_uid:
          type: string
          description: UID of valid patient.
          example: patients-0K58FX811PqZ6fFrOakaxgJZScu
        status:
          type: string
          description: Order status
          example: created
          enum:
          - created
          - closed
        name:
          type: string
          description: Contact name (overrides patient one).
          example: Jane
        surname:
          type: string
          description: Contact surname (overrides patient one).
          example: Smith
        email:
          type: string
          description: Contact email (overrides patient one).
          example: jane.smith@example.com
        phone:
          type: string
          description: Contact phone
          example: "15552106915"
        address:
          description: Contact address (overrides patient one).
          allOf:
          - $ref: '#/components/schemas/Address'
        device_types:
          type: array
          description: Ordered device types
          example:
          - hub
          - scale_bodyfat
          - pulseoximeter
          items:
            $ref: '#/components/schemas/OrderDevice'
    Address:
      required:
      - street
      type: object
      properties:
        street:
          type: string
          description: Street name
          example: 1265 Borregas Ave.
        code:
          type: string
          description: ZIP code
          example: "94086"
        city:
          type: string
          description: City name
          example: Sunnyvale
        state:
          type: string
          description: State name
          example: CA
        country:
          type: string
          description: Country name
          example: USA
    OrderDevice:
      type: string
      example: hub
      enum:
      - hub
      - scale_bodyfat
      - scale_only_weight
      - heartrate
      - pulseoximeter
      - bpm_small_cuff
      - bpm_medium_cuff
      - bpm_large_cuff
      - glucose
      - thermometer
      - spirometer
    Error:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Error code
          example: invalid_parameter
        description:
          type: string
          description: Error description in English
          example: 'Invalid parameter found: test'
  securitySchemes:
    partner_auth:
      type: http
      scheme: basic
